apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
//    compile "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION"
    compile rootProject.ext.dependencies.support_v7_compat
    compile rootProject.ext.dependencies.support_v7_cardview
    compile rootProject.ext.dependencies.support_v7_palette
    compile rootProject.ext.dependencies.support_design
    compile rootProject.ext.dependencies.volley
//    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile rootProject.ext.dependencies.fresco
    compile rootProject.ext.dependencies.fastjson
    compile rootProject.ext.dependencies.eventbus
//    compile "com.ToxicBakery.viewpager.transforms:view-pager-transforms:1.2.32@aar"

    // butterknife
    compile rootProject.ext.dependencies.butterknife
    apt rootProject.ext.dependencies.butterknife_compiler

    // dagger2
    compile rootProject.ext.dependencies.dagger
    apt rootProject.ext.dependencies.dagger_compiler
    provided rootProject.ext.dependencies.javax_annotation

    // rxjava & rxandroid
    compile rootProject.ext.dependencies.rxjava
    compile rootProject.ext.dependencies.rxandroid

    // rxlifecycle
    compile rootProject.ext.dependencies.rxlifecycle
    compile rootProject.ext.dependencies.rxlifecycle_components

    // rxpermissions
    compile rootProject.ext.dependencies.rxpermissions

    // recyclerview item animator
    compile rootProject.ext.dependencies.recyclerview_animators
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        // Enabling multidex support. Requires Build-Tools 21.1.0, and Support repository rev 8.
        multiDexEnabled false
    }
    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        debug {
        }
        // moves the whole sourceSet (and its sub folders) to a new folder. This moves src/androidTest/* to tests/*
        androidTest.setRoot('tests')
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

// Trigger BuildConfig creation
project.afterEvaluate {
    tasks.all { task ->
        if (task.name =~ /generate.*BuildConfig/) {
            task.dependsOn(propagateBuildConfig)
        }
    }
}
task propagateBuildConfig << {
    project.android.buildTypes.all { type ->
        type.buildConfigField "boolean", "RELEASE", isVariantRelease().toString()
    }
}

def isVariantRelease() {
    return rootProject.ext.variantRelease
}